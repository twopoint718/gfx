/**
 * 8x8 monochrome bitmap fonts for rendering
 * Author: Daniel Hepper <daniel@hepper.net>
 *
 * License: Public Domain
 *
 * Based on:
 * // Summary: font8x8.h
 * // 8x8 monochrome bitmap fonts for rendering
 * //
 * // Author:
 * //     Marcel Sondaar
 * //     International Business Machines (public domain VGA fonts)
 * //
 * // License:
 * //     Public Domain
 *
 * Fetched from: http://dimensionalrift.homelinux.net/combuster/mos3/?p=viewsource&file=/modules/gfx/font8_8.asm
 **/

// Constant: font8x8_basic
// Contains an 8x8 font map for unicode points U+0000 - U+007F (basic latin)
char font8x8_basic[128][8] = {
   /*
     * code=0, hex=0x00, ascii="^@"
     */
    {0x00,  /* 00000000 */
    0x00,  /* 00000000 */
    0x00,  /* 00000000 */
    0x00,  /* 00000000 */
    0x00,  /* 00000000 */
    0x00,  /* 00000000 */
    0x00,  /* 00000000 */
    0x00},  /* 00000000 */

    /*
     * code=1, hex=0x01, ascii="^A"
     */
    {0x7E,  /* 01111110 */
    0x81,  /* 10000001 */
    0xA5,  /* 10100101 */
    0x81,  /* 10000001 */
    0x9D,  /* 10011101 */
    0xB9,  /* 10111001 */
    0x81,  /* 10000001 */
    0x7E},  /* 01111110 */

    /*
     * code=2, hex=0x02, ascii="^B"
     */
    {0x7E,  /* 01111110 */
    0xFF,  /* 11111111 */
    0xDB,  /* 11011011 */
    0xFF,  /* 11111111 */
    0xE3,  /* 11100011 */
    0xC7,  /* 11000111 */
    0xFF,  /* 11111111 */
    0x7E},  /* 01111110 */

    /*
     * code=3, hex=0x03, ascii="^C"
     */
    {0x6C,  /* 01101100 */
    0xFE,  /* 11111110 */
    0xFE,  /* 11111110 */
    0xFE,  /* 11111110 */
    0x7C,  /* 01111100 */
    0x38,  /* 00111000 */
    0x10,  /* 00010000 */
    0x00},  /* 00000000 */

    /*
     * code=4, hex=0x04, ascii="^D"
     */
    {0x10,  /* 00010000 */
    0x38,  /* 00111000 */
    0x7C,  /* 01111100 */
    0xFE,  /* 11111110 */
    0x7C,  /* 01111100 */
    0x38,  /* 00111000 */
    0x10,  /* 00010000 */
    0x00},  /* 00000000 */

    /*
     * code=5, hex=0x05, ascii="^E"
     */
    {0x38,  /* 00111000 */
    0x7C,  /* 01111100 */
    0x38,  /* 00111000 */
    0xFE,  /* 11111110 */
    0xFE,  /* 11111110 */
    0x10,  /* 00010000 */
    0x10,  /* 00010000 */
    0x7C},  /* 01111100 */

    /*
     * code=6, hex=0x06, ascii="^F"
     */
    {0x00,  /* 00000000 */
    0x18,  /* 00011000 */
    0x3C,  /* 00111100 */
    0x7E,  /* 01111110 */
    0xFF,  /* 11111111 */
    0x7E,  /* 01111110 */
    0x18,  /* 00011000 */
    0x7E},  /* 01111110 */

    /*
     * code=7, hex=0x07, ascii="^G"
     */
    {0x00,  /* 00000000 */
    0x00,  /* 00000000 */
    0x18,  /* 00011000 */
    0x3C,  /* 00111100 */
    0x3C,  /* 00111100 */
    0x18,  /* 00011000 */
    0x00,  /* 00000000 */
    0x00},  /* 00000000 */

    /*
     * code=8, hex=0x08, ascii="^H"
     */
    {0xFF,  /* 11111111 */
    0xFF,  /* 11111111 */
    0xE7,  /* 11100111 */
    0xC3,  /* 11000011 */
    0xC3,  /* 11000011 */
    0xE7,  /* 11100111 */
    0xFF,  /* 11111111 */
    0xFF},  /* 11111111 */

    /*
     * code=9, hex=0x09, ascii="^I"
     */
    {0x00,  /* 00000000 */
    0x3C,  /* 00111100 */
    0x66,  /* 01100110 */
    0x42,  /* 01000010 */
    0x42,  /* 01000010 */
    0x66,  /* 01100110 */
    0x3C,  /* 00111100 */
    0x00},  /* 00000000 */

    /*
     * code=10, hex=0x0A, ascii="^J"
     */
    {0xFF,  /* 11111111 */
    0xC3,  /* 11000011 */
    0x99,  /* 10011001 */
    0xBD,  /* 10111101 */
    0xBD,  /* 10111101 */
    0x99,  /* 10011001 */
    0xC3,  /* 11000011 */
    0xFF},  /* 11111111 */

    /*
     * code=11, hex=0x0B, ascii="^K"
     */
    {0x0F,  /* 00001111 */
    0x07,  /* 00000111 */
    0x0F,  /* 00001111 */
    0x7D,  /* 01111101 */
    0xCC,  /* 11001100 */
    0xCC,  /* 11001100 */
    0xCC,  /* 11001100 */
    0x78},  /* 01111000 */

    /*
     * code=12, hex=0x0C, ascii="^L"
     */
    {0x3C,  /* 00111100 */
    0x66,  /* 01100110 */
    0x66,  /* 01100110 */
    0x66,  /* 01100110 */
    0x3C,  /* 00111100 */
    0x18,  /* 00011000 */
    0x7E,  /* 01111110 */
    0x18},  /* 00011000 */

    /*
     * code=13, hex=0x0D, ascii="^M"
     */
    {0x3F,  /* 00111111 */
    0x33,  /* 00110011 */
    0x3F,  /* 00111111 */
    0x30,  /* 00110000 */
    0x30,  /* 00110000 */
    0x70,  /* 01110000 */
    0xF0,  /* 11110000 */
    0xE0},  /* 11100000 */

    /*
     * code=14, hex=0x0E, ascii="^N"
     */
    {0x7F,  /* 01111111 */
    0x63,  /* 01100011 */
    0x7F,  /* 01111111 */
    0x63,  /* 01100011 */
    0x63,  /* 01100011 */
    0x67,  /* 01100111 */
    0xE6,  /* 11100110 */
    0xC0},  /* 11000000 */

    /*
     * code=15, hex=0x0F, ascii="^O"
     */
    {0x99,  /* 10011001 */
    0x5A,  /* 01011010 */
    0x3C,  /* 00111100 */
    0xE7,  /* 11100111 */
    0xE7,  /* 11100111 */
    0x3C,  /* 00111100 */
    0x5A,  /* 01011010 */
    0x99},  /* 10011001 */

    /*
     * code=16, hex=0x10, ascii="^P"
     */
    {0x80,  /* 10000000 */
    0xE0,  /* 11100000 */
    0xF8,  /* 11111000 */
    0xFE,  /* 11111110 */
    0xF8,  /* 11111000 */
    0xE0,  /* 11100000 */
    0x80,  /* 10000000 */
    0x00},  /* 00000000 */

    /*
     * code=17, hex=0x11, ascii="^Q"
     */
    {0x02,  /* 00000010 */
    0x0E,  /* 00001110 */
    0x3E,  /* 00111110 */
    0xFE,  /* 11111110 */
    0x3E,  /* 00111110 */
    0x0E,  /* 00001110 */
    0x02,  /* 00000010 */
    0x00},  /* 00000000 */

    /*
     * code=18, hex=0x12, ascii="^R"
     */
   {0x18,  /* 00011000 */
    0x3C,  /* 00111100 */
    0x7E,  /* 01111110 */
    0x18,  /* 00011000 */
    0x18,  /* 00011000 */
    0x7E,  /* 01111110 */
    0x3C,  /* 00111100 */
    0x18},  /* 00011000 */

    /*
     * code=19, hex=0x13, ascii="^S"
     */
    {0x66,  /* 01100110 */
    0x66,  /* 01100110 */
    0x66,  /* 01100110 */
    0x66,  /* 01100110 */
    0x66,  /* 01100110 */
    0x00,  /* 00000000 */
    0x66,  /* 01100110 */
    0x00},  /* 00000000 */

    /*
     * code=20, hex=0x14, ascii="^T"
     */
    {0x7F,  /* 01111111 */
    0xDB,  /* 11011011 */
    0xDB,  /* 11011011 */
    0x7B,  /* 01111011 */
    0x1B,  /* 00011011 */
    0x1B,  /* 00011011 */
    0x1B,  /* 00011011 */
    0x00},  /* 00000000 */

    /*
     * code=21, hex=0x15, ascii="^U"
     */
    {0x3F,  /* 00111111 */
    0x60,  /* 01100000 */
    0x7C,  /* 01111100 */
    0x66,  /* 01100110 */
    0x66,  /* 01100110 */
    0x3E,  /* 00111110 */
    0x06,  /* 00000110 */
    0xFC},  /* 11111100 */

    /*
     * code=22, hex=0x16, ascii="^V"
     */
    {0x00,  /* 00000000 */
    0x00,  /* 00000000 */
    0x00,  /* 00000000 */
    0x00,  /* 00000000 */
    0x7E,  /* 01111110 */
    0x7E,  /* 01111110 */
    0x7E,  /* 01111110 */
    0x00},  /* 00000000 */

    /*
     * code=23, hex=0x17, ascii="^W"
     */
    {0x18,  /* 00011000 */
    0x3C,  /* 00111100 */
    0x7E,  /* 01111110 */
    0x18,  /* 00011000 */
    0x7E,  /* 01111110 */
    0x3C,  /* 00111100 */
    0x18,  /* 00011000 */
    0xFF},  /* 11111111 */

    /*
     * code=24, hex=0x18, ascii="^X"
     */
    {0x18,  /* 00011000 */
    0x3C,  /* 00111100 */
    0x7E,  /* 01111110 */
    0x18,  /* 00011000 */
    0x18,  /* 00011000 */
    0x18,  /* 00011000 */
    0x18,  /* 00011000 */
    0x00},  /* 00000000 */

    /*
     * code=25, hex=0x19, ascii="^Y"
     */
    {0x18,  /* 00011000 */
    0x18,  /* 00011000 */
    0x18,  /* 00011000 */
    0x18,  /* 00011000 */
    0x7E,  /* 01111110 */
    0x3C,  /* 00111100 */
    0x18,  /* 00011000 */
    0x00},  /* 00000000 */

    /*
     * code=26, hex=0x1A, ascii="^Z"
     */
    {0x00,  /* 00000000 */
    0x18,  /* 00011000 */
    0x0C,  /* 00001100 */
    0xFE,  /* 11111110 */
    0x0C,  /* 00001100 */
    0x18,  /* 00011000 */
    0x00,  /* 00000000 */
    0x00},  /* 00000000 */

    /*
     * code=27, hex=0x1B, ascii="^["
     */
    {0x00,  /* 00000000 */
    0x30,  /* 00110000 */
    0x60,  /* 01100000 */
    0xFE,  /* 11111110 */
    0x60,  /* 01100000 */
    0x30,  /* 00110000 */
    0x00,  /* 00000000 */
    0x00},  /* 00000000 */

    /*
     * code=28, hex=0x1C, ascii="^\"
     */
    {0x00,  /* 00000000 */
    0x00,  /* 00000000 */
    0xC0,  /* 11000000 */
    0xC0,  /* 11000000 */
    0xC0,  /* 11000000 */
    0xFE,  /* 11111110 */
    0x00,  /* 00000000 */
    0x00},  /* 00000000 */

    /*
     * code=29, hex=0x1D, ascii="^]"
     */
    {0x00,  /* 00000000 */
    0x24,  /* 00100100 */
    0x66,  /* 01100110 */
    0xFF,  /* 11111111 */
    0x66,  /* 01100110 */
    0x24,  /* 00100100 */
    0x00,  /* 00000000 */
    0x00},  /* 00000000 */

    /*
     * code=30, hex=0x1E, ascii="^^"
     */
    {0x00,  /* 00000000 */
    0x18,  /* 00011000 */
    0x3C,  /* 00111100 */
    0x7E,  /* 01111110 */
    0xFF,  /* 11111111 */
    0xFF,  /* 11111111 */
    0x00,  /* 00000000 */
    0x00},  /* 00000000 */

    /*
     * code=31, hex=0x1F, ascii="^_"
     */
    {0x00,  /* 00000000 */
    0xFF,  /* 11111111 */
    0xFF,  /* 11111111 */
    0x7E,  /* 01111110 */
    0x3C,  /* 00111100 */
    0x18,  /* 00011000 */
    0x00,  /* 00000000 */
    0x00},  /* 00000000 */

    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},   // U+0020 (space)
    { 0x18, 0x3C, 0x3C, 0x18, 0x18, 0x00, 0x18, 0x00},   // U+0021 (!)
    { 0x36, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},   // U+0022 (")
    { 0x36, 0x36, 0x7F, 0x36, 0x7F, 0x36, 0x36, 0x00},   // U+0023 (#)
    { 0x0C, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x0C, 0x00},   // U+0024 ($)
    { 0x00, 0x63, 0x33, 0x18, 0x0C, 0x66, 0x63, 0x00},   // U+0025 (%)
    { 0x1C, 0x36, 0x1C, 0x6E, 0x3B, 0x33, 0x6E, 0x00},   // U+0026 (&)
    { 0x06, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00},   // U+0027 (')
    { 0x18, 0x0C, 0x06, 0x06, 0x06, 0x0C, 0x18, 0x00},   // U+0028 (()
    { 0x06, 0x0C, 0x18, 0x18, 0x18, 0x0C, 0x06, 0x00},   // U+0029 ())
    { 0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00},   // U+002A (*)
    { 0x00, 0x0C, 0x0C, 0x3F, 0x0C, 0x0C, 0x00, 0x00},   // U+002B (+)
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x06},   // U+002C (,)
    { 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00},   // U+002D (-)
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00},   // U+002E (.)
    { 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00},   // U+002F (/)
    { 0x3E, 0x63, 0x73, 0x7B, 0x6F, 0x67, 0x3E, 0x00},   // U+0030 (0)
    { 0x0C, 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x3F, 0x00},   // U+0031 (1)
    { 0x1E, 0x33, 0x30, 0x1C, 0x06, 0x33, 0x3F, 0x00},   // U+0032 (2)
    { 0x1E, 0x33, 0x30, 0x1C, 0x30, 0x33, 0x1E, 0x00},   // U+0033 (3)
    { 0x38, 0x3C, 0x36, 0x33, 0x7F, 0x30, 0x78, 0x00},   // U+0034 (4)
    { 0x3F, 0x03, 0x1F, 0x30, 0x30, 0x33, 0x1E, 0x00},   // U+0035 (5)
    { 0x1C, 0x06, 0x03, 0x1F, 0x33, 0x33, 0x1E, 0x00},   // U+0036 (6)
    { 0x3F, 0x33, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x00},   // U+0037 (7)
    { 0x1E, 0x33, 0x33, 0x1E, 0x33, 0x33, 0x1E, 0x00},   // U+0038 (8)
    { 0x1E, 0x33, 0x33, 0x3E, 0x30, 0x18, 0x0E, 0x00},   // U+0039 (9)
    { 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x00},   // U+003A (:)
    { 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x06},   // U+003B (;)
    { 0x18, 0x0C, 0x06, 0x03, 0x06, 0x0C, 0x18, 0x00},   // U+003C (<)
    { 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00},   // U+003D (=)
    { 0x06, 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x06, 0x00},   // U+003E (>)
    { 0x1E, 0x33, 0x30, 0x18, 0x0C, 0x00, 0x0C, 0x00},   // U+003F (?)
    { 0x3E, 0x63, 0x7B, 0x7B, 0x7B, 0x03, 0x1E, 0x00},   // U+0040 (@)
    { 0x0C, 0x1E, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x00},   // U+0041 (A)
    { 0x3F, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x3F, 0x00},   // U+0042 (B)
    { 0x3C, 0x66, 0x03, 0x03, 0x03, 0x66, 0x3C, 0x00},   // U+0043 (C)
    { 0x1F, 0x36, 0x66, 0x66, 0x66, 0x36, 0x1F, 0x00},   // U+0044 (D)
    { 0x7F, 0x46, 0x16, 0x1E, 0x16, 0x46, 0x7F, 0x00},   // U+0045 (E)
    { 0x7F, 0x46, 0x16, 0x1E, 0x16, 0x06, 0x0F, 0x00},   // U+0046 (F)
    { 0x3C, 0x66, 0x03, 0x03, 0x73, 0x66, 0x7C, 0x00},   // U+0047 (G)
    { 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33, 0x00},   // U+0048 (H)
    { 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00},   // U+0049 (I)
    { 0x78, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E, 0x00},   // U+004A (J)
    { 0x67, 0x66, 0x36, 0x1E, 0x36, 0x66, 0x67, 0x00},   // U+004B (K)
    { 0x0F, 0x06, 0x06, 0x06, 0x46, 0x66, 0x7F, 0x00},   // U+004C (L)
    { 0x63, 0x77, 0x7F, 0x7F, 0x6B, 0x63, 0x63, 0x00},   // U+004D (M)
    { 0x63, 0x67, 0x6F, 0x7B, 0x73, 0x63, 0x63, 0x00},   // U+004E (N)
    { 0x1C, 0x36, 0x63, 0x63, 0x63, 0x36, 0x1C, 0x00},   // U+004F (O)
    { 0x3F, 0x66, 0x66, 0x3E, 0x06, 0x06, 0x0F, 0x00},   // U+0050 (P)
    { 0x1E, 0x33, 0x33, 0x33, 0x3B, 0x1E, 0x38, 0x00},   // U+0051 (Q)
    { 0x3F, 0x66, 0x66, 0x3E, 0x36, 0x66, 0x67, 0x00},   // U+0052 (R)
    { 0x1E, 0x33, 0x07, 0x0E, 0x38, 0x33, 0x1E, 0x00},   // U+0053 (S)
    { 0x3F, 0x2D, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00},   // U+0054 (T)
    { 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0x00},   // U+0055 (U)
    { 0x33, 0x33, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00},   // U+0056 (V)
    { 0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63, 0x00},   // U+0057 (W)
    { 0x63, 0x63, 0x36, 0x1C, 0x1C, 0x36, 0x63, 0x00},   // U+0058 (X)
    { 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x0C, 0x1E, 0x00},   // U+0059 (Y)
    { 0x7F, 0x63, 0x31, 0x18, 0x4C, 0x66, 0x7F, 0x00},   // U+005A (Z)
    { 0x1E, 0x06, 0x06, 0x06, 0x06, 0x06, 0x1E, 0x00},   // U+005B ([)
    { 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x40, 0x00},   // U+005C (\)
    { 0x1E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x1E, 0x00},   // U+005D (])
    { 0x08, 0x1C, 0x36, 0x63, 0x00, 0x00, 0x00, 0x00},   // U+005E (^)
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF},   // U+005F (_)
    { 0x0C, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00},   // U+0060 (`)
    { 0x00, 0x00, 0x1E, 0x30, 0x3E, 0x33, 0x6E, 0x00},   // U+0061 (a)
    { 0x07, 0x06, 0x06, 0x3E, 0x66, 0x66, 0x3B, 0x00},   // U+0062 (b)
    { 0x00, 0x00, 0x1E, 0x33, 0x03, 0x33, 0x1E, 0x00},   // U+0063 (c)
    { 0x38, 0x30, 0x30, 0x3e, 0x33, 0x33, 0x6E, 0x00},   // U+0064 (d)
    { 0x00, 0x00, 0x1E, 0x33, 0x3f, 0x03, 0x1E, 0x00},   // U+0065 (e)
    { 0x1C, 0x36, 0x06, 0x0f, 0x06, 0x06, 0x0F, 0x00},   // U+0066 (f)
    { 0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x1F},   // U+0067 (g)
    { 0x07, 0x06, 0x36, 0x6E, 0x66, 0x66, 0x67, 0x00},   // U+0068 (h)
    { 0x0C, 0x00, 0x0E, 0x0C, 0x0C, 0x0C, 0x1E, 0x00},   // U+0069 (i)
    { 0x30, 0x00, 0x30, 0x30, 0x30, 0x33, 0x33, 0x1E},   // U+006A (j)
    { 0x07, 0x06, 0x66, 0x36, 0x1E, 0x36, 0x67, 0x00},   // U+006B (k)
    { 0x0E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E, 0x00},   // U+006C (l)
    { 0x00, 0x00, 0x33, 0x7F, 0x7F, 0x6B, 0x63, 0x00},   // U+006D (m)
    { 0x00, 0x00, 0x1F, 0x33, 0x33, 0x33, 0x33, 0x00},   // U+006E (n)
    { 0x00, 0x00, 0x1E, 0x33, 0x33, 0x33, 0x1E, 0x00},   // U+006F (o)
    { 0x00, 0x00, 0x3B, 0x66, 0x66, 0x3E, 0x06, 0x0F},   // U+0070 (p)
    { 0x00, 0x00, 0x6E, 0x33, 0x33, 0x3E, 0x30, 0x78},   // U+0071 (q)
    { 0x00, 0x00, 0x3B, 0x6E, 0x66, 0x06, 0x0F, 0x00},   // U+0072 (r)
    { 0x00, 0x00, 0x3E, 0x03, 0x1E, 0x30, 0x1F, 0x00},   // U+0073 (s)
    { 0x08, 0x0C, 0x3E, 0x0C, 0x0C, 0x2C, 0x18, 0x00},   // U+0074 (t)
    { 0x00, 0x00, 0x33, 0x33, 0x33, 0x33, 0x6E, 0x00},   // U+0075 (u)
    { 0x00, 0x00, 0x33, 0x33, 0x33, 0x1E, 0x0C, 0x00},   // U+0076 (v)
    { 0x00, 0x00, 0x63, 0x6B, 0x7F, 0x7F, 0x36, 0x00},   // U+0077 (w)
    { 0x00, 0x00, 0x63, 0x36, 0x1C, 0x36, 0x63, 0x00},   // U+0078 (x)
    { 0x00, 0x00, 0x33, 0x33, 0x33, 0x3E, 0x30, 0x1F},   // U+0079 (y)
    { 0x00, 0x00, 0x3F, 0x19, 0x0C, 0x26, 0x3F, 0x00},   // U+007A (z)
    { 0x38, 0x0C, 0x0C, 0x07, 0x0C, 0x0C, 0x38, 0x00},   // U+007B ({)
    { 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00},   // U+007C (|)
    { 0x07, 0x0C, 0x0C, 0x38, 0x0C, 0x0C, 0x07, 0x00},   // U+007D (})
    { 0x6E, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},   // U+007E (~)
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}    // U+007F
};
